trigger:
  - develop  # Runs when code is pushed to the develop branch

pool:
  vmImage: 'ubuntu-latest'  # Microsoft-hosted agent

variables:
  AZURE_SERVICE_CONNECTION: 'AzureTerraformService'  # Azure DevOps Service Connection
  TF_WORKING_DIR: 'terraform'  # Adjusted based on your file structure

stages:
  - stage: Terraform
    displayName: 'Terraform Deployment'
    jobs:
      - job: Terraform_Apply
        displayName: 'Terraform Init & Apply'
        steps:
          - checkout: self

          # Install Terraform (since ubuntu-latest might not have it)
          - task: TerraformToolInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.7.5'

          # Validate Terraform Formatting
          - script: |
              terraform fmt -check
            workingDirectory: $(TF_WORKING_DIR)
            displayName: 'Check Terraform Formatting'

          # Terraform Init (Using backend.tf instead of backend-config.tfvars)
          - script: |
              terraform init -input=false
              terraform validate
            workingDirectory: $(TF_WORKING_DIR)
            displayName: 'Terraform Init & Validate'

          # Terraform Plan (With Error Handling)
          - script: |
              terraform plan -out=tfplan || exit 1
            workingDirectory: $(TF_WORKING_DIR)
            displayName: 'Terraform Plan'

          # Terraform Apply (With Confirmation)
          - script: |
              terraform apply -auto-approve tfplan || exit 1
            workingDirectory: $(TF_WORKING_DIR)
            displayName: 'Terraform Apply'
